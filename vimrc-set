" ===================== Default ==============================
let mapleader=" "
nnoremap <Space> <nop>
" ==================== Defaults ==============================
syntax on
set hidden
set history=100
filetype plugin indent on
set tabstop=2
set shiftwidth=2
set expandtab
set synmaxcol=512
set shell=bash
set backspace=2
set nu
set encoding=utf-8

" ==================== Swap files ============================
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" ==================== Vim status line ========================
set statusline=
set statusline +=%5*%{&ff}%*            "file format
set statusline +=%4*\ %<%F%*            "full path
set statusline +=%3*%y%*                "file type
set statusline +=%2*%m%*                "modified flag
set statusline +=%1*%=%5l%*             "current line
set statusline +=%2*/%L%*               "total lines
set statusline +=%1*%4v\ %*             "virtual column number

" ==================== Buffers ================================
noremap <S-l> :bn<CR>
noremap <S-h> :bp<CR>
nmap <leader>d :bdelete<CR>
nmap <leader>D :bufdo bd<CR>

" ==================== Ultisnips ============================
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsEditSplit="vertical"

" ==================== Vim test ======================
nmap tt :TestNearest<CR>
nmap tf :TestFile<CR>
nmap tl :TestLast<CR>
nmap ta :TestSuite<CR>
nmap to :Copen<CR>
nmap tfb :TestFile -strategy=dispatch<CR>
nmap tab :TestSuite -strategy=dispatch<CR>
nmap <leader>ts :TestSuite<CR>
nmap <leader>tf :TestFile<CR>
nmap <leader>tn :TestNearest<CR>
nmap <leader>tl :TestLast<CR>
"""""let test#filename_modifier = ':p'
let test#strategy = {
  \ 'nearest': 'basic',
  \ 'file':    'basic',
  \ 'suite':   'dispatch_background',
  \ 'last':    'basic',
\}

" ==================== Trim whitespaces ======================
autocmd BufWritePre * %s/\s\+$//e

vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv

" ==================== CtrlP Vim ======================
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)|deps/|_build/|plugged/|swap/|backup/|undo/|autoload|vendor/$'
let g:ctrlp_show_hidden = 1

" ==================== Tagbar ======================
noremap <F3> :TagbarToggle<CR>

let g:tagbar_autofocus = 1
let g:tagbar_width = 80
let g:tagbar_type_elixir = {
    \ 'ctagstype' : 'elixir',
    \ 'kinds' : [
        \ 'f:functions',
        \ 'functions:functions',
        \ 'c:callbacks',
        \ 'd:delegates',
        \ 'e:exceptions',
        \ 'i:implementations',
        \ 'a:macros',
        \ 'o:operators',
        \ 'm:modules',
        \ 'p:protocols',
        \ 'r:records',
        \ 't:tests'
    \ ]
\ }

" ==================== Deoplete ======================
let g:deoplete#enable_at_startup = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" ==================== Vim-Go ======================
let g:go_fmt_fail_silently = 1
